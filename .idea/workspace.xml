<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6d3134b4-a67d-4c46-80e3-654566a805b8" name="Changes" comment="fix: resolve merge conflict in `package-lock.json` and adjust indentations in `index.ts` &#10;&#10;- Addressed merge conflict in `package-lock.json` by retaining correct `cluster-key-slot` dependency entry.  &#10;- Updated inconsistent indentations in `user-service/src/index.ts` for better code readability.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/auth-service/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/auth-service/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/index.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="package.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/new-trans" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;bonissanti&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ArthurSobreira/42_transcendence.git&quot;,
    &quot;accountId&quot;: &quot;de286582-ad2a-4790-b6a2-7f4817dd9ce3&quot;
  },
  &quot;recentNewPullRequestHead&quot;: {
    &quot;server&quot;: {
      &quot;useHttp&quot;: false,
      &quot;host&quot;: &quot;github.com&quot;,
      &quot;port&quot;: null,
      &quot;suffix&quot;: null
    },
    &quot;owner&quot;: &quot;ArthurSobreira&quot;,
    &quot;repository&quot;: &quot;42_transcendence&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2zmKcedwfHZtt7z3RJYxcKbTeVN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.tournament: Compose Deployment.executor": "Run",
    "HTTP Request.All in rest-api_10.executor": "Run",
    "HTTP Request.http-requests-log | #1.executor": "Run",
    "HTTP Request.http-requests-log | #6.executor": "Run",
    "HTTP Request.http-requests-log | #7.executor": "Run",
    "HTTP Request.http-requests-log | #8.executor": "Run",
    "HTTP Request.rest-api_10 | #1.executor": "Run",
    "HTTP Request.rest-api_11 | #1.executor": "Run",
    "HTTP Request.rest-api_9 | #1.executor": "Run",
    "JavaScript Debug.127.0.0.1:8080.executor": "Debug",
    "JavaScript Debug.127.0.0.1:8081.executor": "Debug",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
    "full.screen.before.presentation.mode": "false",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "C:/Estudos/42_transcendence",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_interpreter_path": "node",
    "nodejs_package_manager_path": "npm",
    "npm.build.executor": "Run",
    "npm.clean:dist.executor": "Run",
    "npm.start (1).executor": "Run",
    "npm.start.executor": "Debug",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "/home/bruno/Documents/42SP/42_transcendence/frontend/node_modules/typescript/lib"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tournament/src/Application/Queries/Handlers" />
      <recent name="$PROJECT_DIR$/tournament/src/Application/DTO/ToQuery" />
      <recent name="$PROJECT_DIR$/tournament/src/Application/Services/Concrete" />
      <recent name="$PROJECT_DIR$/tournament/src/Domain/DTO/Command" />
      <recent name="$PROJECT_DIR$/tournament/src/Presentation/Controllers" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/user-service/prisma" />
      <recent name="$PROJECT_DIR$/user-service/src/Application/DTO/ToQuery" />
      <recent name="$PROJECT_DIR$/user-service/src/Domain" />
      <recent name="$PROJECT_DIR$/user-service/src/Application" />
      <recent name="$PROJECT_DIR$/devops" />
    </key>
  </component>
  <component name="RunManager" selected="npm.clean:dist">
    <configuration name="http-requests-log | #6" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" executionIdentifier="#6" index="6" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="http-requests-log | #8" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" executionIdentifier="#8" index="8" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api_11 | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api_11.http" executionIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="127.0.0.1:8081" type="JavascriptDebugType" temporary="true" nameIsGenerated="true" uri="http://127.0.0.1:8081">
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="clean:dist" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/backend/package.json" />
      <command value="run" />
      <scripts>
        <script value="clean:dist" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/tournament/package.json" />
      <command value="start" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/tournament/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.http-requests-log | #6" />
      <item itemvalue="HTTP Request.http-requests-log | #8" />
      <item itemvalue="HTTP Request.rest-api_11 | #1" />
      <item itemvalue="JavaScript Debug.127.0.0.1:8081" />
      <item itemvalue="npm.start" />
      <item itemvalue="npm.clean:dist" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="npm.clean:dist" />
        <item itemvalue="JavaScript Debug.127.0.0.1:8081" />
        <item itemvalue="HTTP Request.rest-api_11 | #1" />
        <item itemvalue="HTTP Request.http-requests-log | #8" />
        <item itemvalue="HTTP Request.http-requests-log | #6" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-WS-251.27812.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6d3134b4-a67d-4c46-80e3-654566a805b8" name="Changes" comment="" />
      <created>1752330888248</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752330888248</updated>
      <workItem from="1752330889369" duration="4328000" />
      <workItem from="1752335230569" duration="2175000" />
      <workItem from="1752342442241" duration="1755000" />
      <workItem from="1752344203319" duration="11126000" />
      <workItem from="1752355352918" duration="731000" />
      <workItem from="1752356104739" duration="4274000" />
      <workItem from="1752529945400" duration="5257000" />
      <workItem from="1752535229586" duration="790000" />
      <workItem from="1752536105787" duration="659000" />
      <workItem from="1752536928505" duration="86000" />
      <workItem from="1752537118401" duration="535000" />
      <workItem from="1752539480256" duration="287000" />
      <workItem from="1752622489377" duration="1208000" />
      <workItem from="1752623711391" duration="2314000" />
      <workItem from="1752626039489" duration="3372000" />
      <workItem from="1752701419694" duration="8696000" />
      <workItem from="1752793555871" duration="8203000" />
      <workItem from="1752936359530" duration="928000" />
      <workItem from="1752937299761" duration="2991000" />
      <workItem from="1752944155456" duration="34000" />
      <workItem from="1752945751687" duration="1427000" />
      <workItem from="1752953037175" duration="4719000" />
      <workItem from="1752957795072" duration="1303000" />
      <workItem from="1753043060074" duration="4990000" />
      <workItem from="1753220205206" duration="8857000" />
      <workItem from="1753229549471" duration="1180000" />
      <workItem from="1753262409938" duration="1325000" />
      <workItem from="1753293265612" duration="3992000" />
      <workItem from="1753299588068" duration="4795000" />
      <workItem from="1753309101892" duration="2006000" />
      <workItem from="1753311167866" duration="463000" />
      <workItem from="1753311643051" duration="5574000" />
      <workItem from="1753394633009" duration="7166000" />
      <workItem from="1753401816500" duration="4935000" />
      <workItem from="1753540703225" duration="280000" />
      <workItem from="1753540996134" duration="149000" />
      <workItem from="1753541185469" duration="3095000" />
    </task>
    <task id="LOCAL-00039" summary="feat: add `GetAllHistoriesQueryHandler`, `GetAllHistoriesViewModel`, and DTO for history retrieval&#10;&#10;- Implemented `GetAllHistoriesQueryHandler` to handle history retrieval by username.&#10;- Added `GetAllHistoriesViewModel` for mapping DTO data to a user-friendly format.&#10;- Introduced `GetAllHistoriesQueryDTO` to structure history query data.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752709276850</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1752709276850</updated>
    </task>
    <task id="LOCAL-00040" summary="feat: implement `GetAllHistories` in `HistoryService` and update `GetAllTournamentsDTO`&#10;&#10;- Added `GetAll` method in `HistoryService` to retrieve tournament histories based on username.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752709285371</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1752709285371</updated>
    </task>
    <task id="LOCAL-00041" summary="feat: implement `GetAllHistories` in `HistoryService` and update `GetAllTournamentsDTO`&#10;&#10;- Added `GetAll` method in `HistoryService` to retrieve tournament histories based on username.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752710073833</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1752710073833</updated>
    </task>
    <task id="LOCAL-00042" summary="feat: integrate `BackendApiClient` for user validation and win/lose tracking&#10;&#10;- Added `BackendApiClient` to `CreateHistoryCommandHandler` for tracking user win/lose metrics.&#10;- Renamed methods in `BackendApiClient` for consistency (`verifyUserExists` to `VerifyIfUsersExists`).&#10;- Introduced `AddWinLoseForUser` method in `BackendApiClient`.&#10;- Updated validators to use the newly renamed methods.">
      <option name="closed" value="true" />
      <created>1752801401502</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1752801401502</updated>
    </task>
    <task id="LOCAL-00043" summary="feat: add matchmaking-related DTOs, query objects, and new validation errors&#10;&#10;- Introduced `GenerateMatchmakingDTO`, `GenerateMatchmakingQuery`, and `GenerateMatchmakingQueryDTO` for matchmaking logic.&#10;- Added `NegativeWins` error to `ErrorCatalog` for validation of win values.&#10;- Updated `ErrorCatalog` messages for consistency in backend API error naming.">
      <option name="closed" value="true" />
      <created>1752801412750</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1752801412750</updated>
    </task>
    <task id="LOCAL-00044" summary="refactor: rename method in `IBackendApiClient` and update logs for clarity&#10;&#10;- Renamed `verifyUserExists` to `VerifyIfUsersExists` in `IBackendApiClient` for consistency.&#10;- Enhanced error logging in `index.ts` for better debugging. &#10;- Minor formatting updates in `HistoryRepository`.">
      <option name="closed" value="true" />
      <created>1752801427669</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1752801427669</updated>
    </task>
    <task id="LOCAL-00045" summary="feat: implement matchmaking controller, view model, and query handlers&#10;&#10;- Added `MatchmakingController` with matchmaking logic and integration via `GenerateMatchmakingDTO`.&#10;- Introduced `GenerateMatchmakingViewModel` to structure matchmaking data.&#10;- Implemented `GenerateMatchmakingQueryHandler` and `GenerateMatchmakingQueryValidator` for query processing and validation.">
      <option name="closed" value="true" />
      <created>1752801461053</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1752801461053</updated>
    </task>
    <task id="LOCAL-00046" summary="feat: add matchmaking service, user search method, and update routes&#10;&#10;- Implemented `MatchmakingService` with preliminary `Generate` logic.&#10;- Added `SearchForClosestOpponent` method in `UserRepository` for matchmaking user search based on win ratio and matches played.&#10;- Updated `UserRoutes` with corrected endpoint `/users/exists`.&#10;- Extended `NotificationError` with `SetAllErrorsToString` method for better error handling.">
      <option name="closed" value="true" />
      <created>1752801469755</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1752801469755</updated>
    </task>
    <task id="LOCAL-00047" summary="chore: add missing newline and leave TODO for additional validators&#10;&#10;- Fixed missing newline in `GenerateMatchmakingQueryValidator.ts`.&#10;- Added a TODO placeholder to include validators for additional getters.">
      <option name="closed" value="true" />
      <created>1752801608961</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1752801608961</updated>
    </task>
    <task id="LOCAL-00048" summary="chore: add TODO placeholders for unimplemented methods in `BackendApiClient`">
      <option name="closed" value="true" />
      <created>1752801659903</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1752801659903</updated>
    </task>
    <task id="LOCAL-00049" summary="feat: enhance matchmaking logic in `UserRepository` and add `GetUserMatchmakingQueryDTO`&#10;&#10;- Updated `SearchForClosestOpponent` to refine candidate selection based on win ratio differences.&#10;- Implemented a fallback `SearchForAnyOpponent` method for broader matchmaking.&#10;- Added `mapToUserMatchmakingQueryDTO` for structured matchmaking data mapping.&#10;- Introduced `GetUserMatchmakingQueryDTO` to support detailed matchmaking query responses.">
      <option name="closed" value="true" />
      <created>1752937454715</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1752937454715</updated>
    </task>
    <task id="LOCAL-00050" summary="feat: update matchmaking DTOs and queries to support total games and username&#10;&#10;- Replaced `uuid` with `username` in `GenerateMatchmakingDTO` and `GenerateMatchmakingQuery`.&#10;- Added `totalGames` property to DTOs and queries for enhanced matchmaking logic.&#10;- Updated `BackendApiClient` with new methods for user verification and opponent search.&#10;- Added `NegativeValues` error to `ErrorCatalog` for input validation.">
      <option name="closed" value="true" />
      <created>1752940167757</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1752940167758</updated>
    </task>
    <task id="LOCAL-00051" summary="refactor: replace `HistoryRepository` with `BackendApiClient` in `GenerateMatchmakingQueryHandler` and update validation&#10;&#10;- Updated `Handler` to use `BackendApiClient` for opponent search and user validation.&#10;- Extended input validation to include `totalGames` check.&#10;- Replaced `uuid` with `username` in user validation and opponent search methods.">
      <option name="closed" value="true" />
      <created>1752940175279</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1752940175279</updated>
    </task>
    <task id="LOCAL-00052" summary="refactor: replace `HistoryRepository` with `BackendApiClient` in `GenerateMatchmakingQueryHandler` and update validation&#10;&#10;- Updated `Handler` to use `BackendApiClient` for opponent search and user validation.&#10;- Extended input validation to include `totalGames` check.&#10;- Replaced `uuid` with `username` in user validation and opponent search methods.">
      <option name="closed" value="true" />
      <created>1752940184527</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1752940184527</updated>
    </task>
    <task id="LOCAL-00053" summary="refactor: simplify `SearchForClosestOpponent` and enhance `MatchmakingService`&#10;&#10;- Removed unnecessary `paremterLoses` parameter from `SearchForClosestOpponent`.&#10;- Refactored `MatchmakingService` to include enhanced query validation and error handling.&#10;- Updated `Generate` method to return detailed matchmaking results using `GetUserMatchmakingViewModel`.">
      <option name="closed" value="true" />
      <created>1752940200698</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1752940200698</updated>
    </task>
    <task id="LOCAL-00054" summary="refactor: remove unused `GenerateMatchmakingQueryDTO` and `GenerateMatchmakingViewModel` classes">
      <option name="closed" value="true" />
      <created>1752940252028</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1752940252028</updated>
    </task>
    <task id="LOCAL-00055" summary="refactor: switch matchmaking input from body to query parameters&#10;&#10;- Updated `GenerateMatchmaking` method in `MatchmakingController` to use query parameters instead of request body.&#10;- Adjusted `MatchmakingRoutes` to reflect the new query-based input.&#10;- Enhanced input validation with querystring schema in `MatchmakingRoutes`.">
      <option name="closed" value="true" />
      <created>1752947165529</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1752947165530</updated>
    </task>
    <task id="LOCAL-00056" summary="feat: add token generation utility and improve coding style consistency&#10;&#10;- Added `generateToken` function in `AuthMiddleware` for JWT creation with a 1-hour expiration.&#10;- Enhanced code formatting across `AuthMiddleware` and `BaseController` for better readability.&#10;- Adjusted imports and structure of handler files during package reorganization.">
      <option name="closed" value="true" />
      <created>1753045816435</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1753045816436</updated>
    </task>
    <task id="LOCAL-00057" summary="feat: implement JWT-based login flow with improved DTO and ViewModel structure&#10;&#10;- Added `Login` method in `LoginUserService` to handle user login with JWT generation.&#10;- Introduced `LoginUserViewModel` for structured token response.&#10;- Refactored DTO imports and file paths for better organization.&#10;- Updated `UserSessionRoutes` and `UserSessionController` to integrate new login logic.">
      <option name="closed" value="true" />
      <created>1753045833770</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1753045833770</updated>
    </task>
    <task id="LOCAL-00058" summary="Merge: arquivos trazidos do merge">
      <option name="closed" value="true" />
      <created>1753045857572</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1753045857572</updated>
    </task>
    <task id="LOCAL-00059" summary="feat: add `TokenBlacklistService` and integrate Redis dependency&#10;&#10;- Created `TokenBlacklistService` for managing blacklisted JWT tokens.&#10;- Added Redis client as a dependency for handling token storage.&#10;- Updated `package.json` to include `redis` dependency.">
      <option name="closed" value="true" />
      <created>1753048016876</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1753048016876</updated>
    </task>
    <task id="LOCAL-00060" summary="feat: enhance authentication and security with token validation and CORS&#10;&#10;- Integrated `TokenBlacklistService` in `AuthMiddleware` for token revocation checks.&#10;- Implemented `helmet` for improved security headers.&#10;- Added `fastifyCors` for handling cross-origin requests.&#10;- Updated error handling and token validation logic in `AuthMiddleware`.">
      <option name="closed" value="true" />
      <created>1753228420653</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1753228420654</updated>
    </task>
    <task id="LOCAL-00061" summary="feat: enhance logout and login services with token handling and security improvements&#10;&#10;- Integrated `TokenBlacklistService` to revoke tokens during logout.&#10;- Enhanced `LogoutUserService` to handle token blacklisting from cookies.&#10;- Updated `LoginUserService` with secure cookie settings for JWT storage.&#10;- Added `JWTPayload` interface for better token structure.&#10;- Integrated `helmet`, `cookie`, and `fastifyCors` for improved security and CORS handling.">
      <option name="closed" value="true" />
      <created>1753228669704</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1753228669704</updated>
    </task>
    <task id="LOCAL-00062" summary="feat: add Fastify plugins to improve security and CORS handling&#10;&#10;- Integrated `@fastify/cookie`, `@fastify/cors`, and `@fastify/helmet` for enhanced security and functionality.&#10;- Added `@types/sanitize-html` to devDependencies for improved HTML sanitization type support.">
      <option name="closed" value="true" />
      <created>1753228681986</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1753228681986</updated>
    </task>
    <task id="LOCAL-00063" summary="feat: enhance login flow with secure cookie-based JWT storage&#10;&#10;- Added HTTP-only, secure, and same-site cookie settings for storing JWTs in `UserSessionRoutes`.&#10;- Updated `LoginUserService` to pass `reply` for cookie handling.&#10;- Improved authentication response structure with user details.">
      <option name="closed" value="true" />
      <created>1753228691225</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1753228691226</updated>
    </task>
    <task id="LOCAL-00064" summary="feat: add `SanitizeHelper` utility for data validation&#10;&#10;- Introduced `SanitizeHelper` with methods for boolean and number sanitization.&#10;- Added static utility functions to enhance input validation consistency.">
      <option name="closed" value="true" />
      <created>1753229055703</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1753229055703</updated>
    </task>
    <task id="LOCAL-00065" summary="feat: extend `SanitizeHelper` with date-sanitization utility&#10;&#10;- Added `SanitizerDate` method for validating and sanitizing date inputs.&#10;- Enhanced `SanitizerNumber` to handle null and undefined values more robustly.">
      <option name="closed" value="true" />
      <created>1753230656410</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1753230656410</updated>
    </task>
    <task id="LOCAL-00066" summary="refactor: rename and restructure `LogoutUserService` methods&#10;&#10;- Renamed `Execute` method to `Logout` for clarity and consistency.&#10;- Added unimplemented `Execute` placeholder to support future modifications. &#10;- Removed redundant import from `game-service/src/index.ts`.">
      <option name="closed" value="true" />
      <created>1753263472553</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1753263472554</updated>
    </task>
    <task id="LOCAL-00067" summary="feat: add Redis integration and enhance `LogoutUserService` logic&#10;&#10;- Added `redis` dependency to manage session storage and caching (`package.json`, `package-lock.json`).&#10;- Updated `LogoutUserService` to support passing `request` alongside session data.&#10;- Introduced Redis client packages for modular functionality: `@redis/client`, `@redis/bloom`, `@redis/json`, `@redis/search`, `@redis/time-series`.">
      <option name="closed" value="true" />
      <created>1753263483617</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1753263483617</updated>
    </task>
    <task id="LOCAL-00068" summary="Merge remote-tracking branch 'origin/master' into fix/login-logout&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml&#10;#&#9;game-service/package-lock.json&#10;#&#9;game-service/package.json&#10;#&#9;game-service/src/index.ts&#10;#&#9;user-service/package-lock.json&#10;#&#9;user-service/package.json&#10;#&#9;user-service/src/Application/DTO/Command/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/CreateUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/DeleteUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/EditUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/UserSessionDTO.ts&#10;#&#9;user-service/src/Application/DTO/Query/GetUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Query/VerifyIfUsersExistsByUuidsDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/CreateUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/DeleteUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/EditUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/UserSessionDTO.ts&#10;#&#9;user-service/src/Application/Services/Concrete/CreateUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/DeleteUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/EditUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/GetUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/LoginUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/LogoutUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/VerificationService.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/CreateUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/DeleteUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/EditUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/UserSessionCommand.ts&#10;#&#9;user-service/src/Domain/DTO/Command/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/CreateUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/DeleteUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/EditUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/UserSessionDTO.ts&#10;#&#9;user-service/src/Domain/Queries/Handlers/GetUserQueryHandler.ts&#10;#&#9;user-service/src/Domain/Queries/QueryObject/GetUserQuery.ts&#10;#&#9;user-service/src/Domain/Queries/QueryObject/VerifyIfUsersExistsByUuidsQuery.ts&#10;#&#9;user-service/src/Infrastructure/Persistence/Repositories/Interface/IBaseRepository.ts&#10;#&#9;user-service/src/Presentation/Controllers/UserController.ts&#10;#&#9;user-service/src/Presentation/Controllers/UserSessionController.ts&#10;#&#9;user-service/src/Presentation/Middleware/AuthMiddleware.ts&#10;#&#9;user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts&#10;#&#9;user-service/src/Presentation/Routes/UserSessionRoutes/UserSessionRoutes.ts&#10;#&#9;user-service/src/index.ts">
      <option name="closed" value="true" />
      <created>1753265731446</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1753265731446</updated>
    </task>
    <task id="LOCAL-00069" summary="refactor: remove redundant `VerifyIfUserExistsByUuidsService` and unused query handler&#10;&#10;- Deleted `VerifyIfUserExistsByUuidsService` method and related query handler for cleanup.&#10;- Added `qs` and `@types/qs` to dependencies for handling query string parsing.&#10;- Updated `package-lock.json` with new dependency installations.">
      <option name="closed" value="true" />
      <created>1753266055110</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1753266055110</updated>
    </task>
    <task id="LOCAL-00070" summary="refactor: remove redundant `VerifyIfUserExistsByUuidsService` and unused query handler&#10;&#10;- Deleted `VerifyIfUserExistsByUuidsService` method and related query handler for cleanup.&#10;- Added `qs` and `@types/qs` to dependencies for handling query string parsing.&#10;- Updated `package-lock.json` with new dependency installations.">
      <option name="closed" value="true" />
      <created>1753266072840</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1753266072840</updated>
    </task>
    <task id="LOCAL-00071" summary="feat: add `anonymous` property to user commands and refactor constructors&#10;&#10;- Introduced `anonymous` property in `EditUserCommand` and `CreateUserCommand` for enhanced user data handling.&#10;- Updated constructors and DTO mappings to support the new property.&#10;- Removed unused comment in `BackendApiClient`.">
      <option name="closed" value="true" />
      <created>1753267643584</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1753267643584</updated>
    </task>
    <task id="LOCAL-00072" summary="feat: add `GetAllUsers` method and update constructors for enhanced user handling&#10;&#10;- Introduced `GetAllUsers` method in `GetUserService` to fetch all users.&#10;- Added `GetAll` method in `GetUserQueryHandler` for querying all users.&#10;- Updated `GetUserViewModel` constructor to support nullable numerical values. &#10;- Refactored imports and service assignments in `index.ts`.">
      <option name="closed" value="true" />
      <created>1753267652680</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1753267652680</updated>
    </task>
    <task id="LOCAL-00073" summary="feat: add `GetAllUsers` method and update constructors for enhanced user handling&#10;&#10;- Introduced `GetAllUsers` method in `GetUserService` to fetch all users.&#10;- Added `GetAll` method in `GetUserQueryHandler` for querying all users.&#10;- Updated `GetUserViewModel` constructor to support nullable numerical values. &#10;- Refactored imports and service assignments in `index.ts`.">
      <option name="closed" value="true" />
      <created>1753267661939</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1753267661940</updated>
    </task>
    <task id="LOCAL-00074" summary="feat: add `ChangeRequestFriendStatusCommandValidator` and update friendship handlers&#10;&#10;- Introduced `ChangeRequestFriendStatusCommandValidator` for validating friend status change commands.&#10;- Updated `AddRequestFriendCommandHandler` and `ChangeRequestFriendStatusCommandHandler` with corrected method calls and async handling.&#10;- Refactored constructor parameters to fix type mismatches.">
      <option name="closed" value="true" />
      <created>1753310841512</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1753310841512</updated>
    </task>
    <task id="LOCAL-00075" summary="feat: enhance friendship handling and repository methods&#10;&#10;- Added `FastifyReply` for reply handling in `FriendshipService`.&#10;- Introduced new constructor dependencies and refactored `FriendshipService` handlers.&#10;- Updated friendship repository methods with improved typing and additional utility functions.&#10;- Changed `Friendship` entity to support mutable `status`.">
      <option name="closed" value="true" />
      <created>1753310851968</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1753310851968</updated>
    </task>
    <task id="LOCAL-00076" summary="feat: improve friendship handling and add route definitions&#10;&#10;- Extended `FriendshipController` with `BaseController` inheritance and introduced `notificationError` for better error handling.&#10;- Fixed incorrect parameter mapping in `AddFriend` method.&#10;- Renamed and refactored `ListFriendshipStatus` to `FriendshipStatusList` for clarity.&#10;- Created `GetFriendshipListDTO` for handling friendship listing.&#10;- Added `FriendshipRoutes` for managing friendship-related endpoints, including `addFriend`, `changeRequestStatus`, and `friendsList`.">
      <option name="closed" value="true" />
      <created>1753312395819</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1753312395819</updated>
    </task>
    <task id="LOCAL-00077" summary="feat: add `GetFriendshipListQuery` and its validator&#10;&#10;- Created `GetFriendshipListQuery` to structure friendship listing queries.&#10;- Added `GetFriendshipListQueryValidator` for validation of query input, including user existence verification and error handling.">
      <option name="closed" value="true" />
      <created>1753312405730</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1753312405730</updated>
    </task>
    <task id="LOCAL-00078" summary="feat: implement `GetFriendshipListQueryHandler` and enhance repository&#10;&#10;- Added `GetFriendshipListQueryHandler` for handling friendship listing queries.&#10;- Updated `FriendshipRepository` with query DTO mapping and improved methods for retrieving friendships.&#10;- Introduced `GetFriendshipListQueryDTO` to structure friendship listing response data.">
      <option name="closed" value="true" />
      <created>1753317302074</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1753317302074</updated>
    </task>
    <task id="LOCAL-00079" summary="feat: improve validation and null-safety in friend request commands&#10;&#10;- Fixed user existence verification in `AddRequestFriendCommandValidator`.&#10;- Added `status` property to `AddRequestFriendDTO` for better friend request status management.&#10;- Improved null-safety in `ChangeRequestFriendStatusCommandHandler` with type adjustments.&#10;- Refactored imports in `ChangeRequestFriendStatusCommand`.">
      <option name="closed" value="true" />
      <created>1753404426746</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1753404426747</updated>
    </task>
    <task id="LOCAL-00080" summary="feat: refactor `FriendshipController` and update repository methods&#10;&#10;- Added `FriendshipService` dependency to `FriendshipController` for improved service handling.&#10;- Made controller methods public for better accessibility.&#10;- Updated `ChangeRequestFriendStatusDTO` with renamed `friendshipUuid` property.&#10;- Enhanced `FriendshipRepository` with improved typing, utility functions, and `fromDatabase` method for entity mapping.&#10;- Refactored `Friendship` entity to support mutable fields and introduced static `fromDatabase` method.">
      <option name="closed" value="true" />
      <created>1753404438503</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1753404438503</updated>
    </task>
    <task id="LOCAL-00081" summary="feat: implement friendship listing in service and route updates&#10;&#10;- Renamed `uuid` to `userUuid` in `GetFriendshipListDTO` for clarity.&#10;- Added `ListFriendService` method in `FriendshipService` for listing friendships by status (pending/accepted).&#10;- Introduced `GetFriendshipListQuery` and its validator in `FriendshipService`.&#10;- Updated `FriendshipRoutes` with support for listing friendships.">
      <option name="closed" value="true" />
      <created>1753404450169</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1753404450169</updated>
    </task>
    <task id="LOCAL-00082" summary="feat: refactor `GetFriendshipListQuery` handling and add view model&#10;&#10;- Changed properties in `GetFriendshipListQueryDTO` to `readonly` for immutability.&#10;- Made `Validator` async and ensured user existence verification uses `await`.&#10;- Introduced `GetFriendshipListViewModel` to map `DTO` data and streamline presentation logic.&#10;- Updated `GetFriendshipListQueryHandler` with `GetFriendshipListQueryDTO` dependency.">
      <option name="closed" value="true" />
      <created>1753404508325</created>
      <option name="number" value="00082" />
      <option name="presentableId" value="LOCAL-00082" />
      <option name="project" value="LOCAL" />
      <updated>1753404508325</updated>
    </task>
    <task id="LOCAL-00083" summary="feat: add friendship management support and schema improvements&#10;&#10;- Introduced `FriendshipRepository`, `FriendshipController`, and `FriendshipRoutes` for handling friendship-related functionality.&#10;- Updated `Prisma` schema with new indexes and corrected relation naming.&#10;- Marked `UserRepository` in `GetUserService` as `readonly` for immutability.&#10;- Removed unused methods from `IBaseRepository` to streamline interface.&#10;- Integrated friendship routes into application entry point.">
      <option name="closed" value="true" />
      <created>1753404519887</created>
      <option name="number" value="00083" />
      <option name="presentableId" value="LOCAL-00083" />
      <option name="project" value="LOCAL" />
      <updated>1753404519887</updated>
    </task>
    <task id="LOCAL-00084" summary="feat: enhance `StatusRequest` and refactor `UserRepository` with `User.fromDatabase` integration&#10;&#10;- Assigned string values to `StatusRequest` enum for consistency and readability.&#10;- Added `User.fromDatabase` static method for entity reconstruction from database.&#10;- Replaced manual entity mapping in `UserRepository` methods with `User.fromDatabase`.">
      <option name="closed" value="true" />
      <created>1753404526811</created>
      <option name="number" value="00084" />
      <option name="presentableId" value="LOCAL-00084" />
      <option name="project" value="LOCAL" />
      <updated>1753404526811</updated>
    </task>
    <task id="LOCAL-00085" summary="refactor: remove unused imports from `FriendshipService` and entry point&#10;&#10;- Eliminated redundant imports (`GetFriendshipListQueryDTO`, `GetUserViewModel`, `User`) for cleaner code and improved maintainability.">
      <option name="closed" value="true" />
      <created>1753404714379</created>
      <option name="number" value="00085" />
      <option name="presentableId" value="LOCAL-00085" />
      <option name="project" value="LOCAL" />
      <updated>1753404714379</updated>
    </task>
    <task id="LOCAL-00086" summary="refactor: remove unused imports from `FriendshipService` and entry point&#10;&#10;- Eliminated redundant imports (`GetFriendshipListQueryDTO`, `GetUserViewModel`, `User`) for cleaner code and improved maintainability.">
      <option name="closed" value="true" />
      <created>1753404989247</created>
      <option name="number" value="00086" />
      <option name="presentableId" value="LOCAL-00086" />
      <option name="project" value="LOCAL" />
      <updated>1753404989247</updated>
    </task>
    <task id="LOCAL-00087" summary="fix: resolve merge conflict in `package-lock.json` and adjust indentations in `index.ts` &#10;&#10;- Addressed merge conflict in `package-lock.json` by retaining correct `cluster-key-slot` dependency entry.  &#10;- Updated inconsistent indentations in `user-service/src/index.ts` for better code readability.">
      <option name="closed" value="true" />
      <created>1753405601801</created>
      <option name="number" value="00087" />
      <option name="presentableId" value="LOCAL-00087" />
      <option name="project" value="LOCAL" />
      <updated>1753405601801</updated>
    </task>
    <option name="localTasksCounter" value="88" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: enhance login flow with secure cookie-based JWT storage&#10;&#10;- Added HTTP-only, secure, and same-site cookie settings for storing JWTs in `UserSessionRoutes`.&#10;- Updated `LoginUserService` to pass `reply` for cookie handling.&#10;- Improved authentication response structure with user details." />
    <MESSAGE value="feat: add `SanitizeHelper` utility for data validation&#10;&#10;- Introduced `SanitizeHelper` with methods for boolean and number sanitization.&#10;- Added static utility functions to enhance input validation consistency." />
    <MESSAGE value="feat: extend `SanitizeHelper` with date-sanitization utility&#10;&#10;- Added `SanitizerDate` method for validating and sanitizing date inputs.&#10;- Enhanced `SanitizerNumber` to handle null and undefined values more robustly." />
    <MESSAGE value="refactor: rename and restructure `LogoutUserService` methods&#10;&#10;- Renamed `Execute` method to `Logout` for clarity and consistency.&#10;- Added unimplemented `Execute` placeholder to support future modifications. &#10;- Removed redundant import from `game-service/src/index.ts`." />
    <MESSAGE value="feat: add Redis integration and enhance `LogoutUserService` logic&#10;&#10;- Added `redis` dependency to manage session storage and caching (`package.json`, `package-lock.json`).&#10;- Updated `LogoutUserService` to support passing `request` alongside session data.&#10;- Introduced Redis client packages for modular functionality: `@redis/client`, `@redis/bloom`, `@redis/json`, `@redis/search`, `@redis/time-series`." />
    <MESSAGE value="Merge remote-tracking branch 'origin/master' into fix/login-logout&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml&#10;#&#9;game-service/package-lock.json&#10;#&#9;game-service/package.json&#10;#&#9;game-service/src/index.ts&#10;#&#9;user-service/package-lock.json&#10;#&#9;user-service/package.json&#10;#&#9;user-service/src/Application/DTO/Command/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/CreateUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/DeleteUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/EditUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Command/UserSessionDTO.ts&#10;#&#9;user-service/src/Application/DTO/Query/GetUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/Query/VerifyIfUsersExistsByUuidsDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/CreateUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/DeleteUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/EditUserDTO.ts&#10;#&#9;user-service/src/Application/DTO/ToCommand/UserSessionDTO.ts&#10;#&#9;user-service/src/Application/Services/Concrete/CreateUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/DeleteUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/EditUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/GetUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/LoginUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/LogoutUserService.ts&#10;#&#9;user-service/src/Application/Services/Concrete/VerificationService.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/CreateUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/DeleteUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/EditUserCommand.ts&#10;#&#9;user-service/src/Domain/Command/CommandObject/UserSessionCommand.ts&#10;#&#9;user-service/src/Domain/DTO/Command/CreateUserAuth0DTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/CreateUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/DeleteUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/EditUserDTO.ts&#10;#&#9;user-service/src/Domain/DTO/Command/UserSessionDTO.ts&#10;#&#9;user-service/src/Domain/Queries/Handlers/GetUserQueryHandler.ts&#10;#&#9;user-service/src/Domain/Queries/QueryObject/GetUserQuery.ts&#10;#&#9;user-service/src/Domain/Queries/QueryObject/VerifyIfUsersExistsByUuidsQuery.ts&#10;#&#9;user-service/src/Infrastructure/Persistence/Repositories/Interface/IBaseRepository.ts&#10;#&#9;user-service/src/Presentation/Controllers/UserController.ts&#10;#&#9;user-service/src/Presentation/Controllers/UserSessionController.ts&#10;#&#9;user-service/src/Presentation/Middleware/AuthMiddleware.ts&#10;#&#9;user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts&#10;#&#9;user-service/src/Presentation/Routes/UserSessionRoutes/UserSessionRoutes.ts&#10;#&#9;user-service/src/index.ts" />
    <MESSAGE value="refactor: remove redundant `VerifyIfUserExistsByUuidsService` and unused query handler&#10;&#10;- Deleted `VerifyIfUserExistsByUuidsService` method and related query handler for cleanup.&#10;- Added `qs` and `@types/qs` to dependencies for handling query string parsing.&#10;- Updated `package-lock.json` with new dependency installations." />
    <MESSAGE value="feat: add `anonymous` property to user commands and refactor constructors&#10;&#10;- Introduced `anonymous` property in `EditUserCommand` and `CreateUserCommand` for enhanced user data handling.&#10;- Updated constructors and DTO mappings to support the new property.&#10;- Removed unused comment in `BackendApiClient`." />
    <MESSAGE value="feat: add `GetAllUsers` method and update user handling constructors&#10;&#10;- Added `GetAllUsers` method in `GetUserService` and `GetAll` in `GetUserQueryHandler` to retrieve all users.&#10;- Enhanced `GetUserViewModel` constructor for nullable numerical values.&#10;- Refactored imports and service assignments in `index.ts`." />
    <MESSAGE value="feat: add `GetAllUsers` method and update user handling constructors&#10;&#10;- Added `GetAllUsers` method in `GetUserService` and `GetAll` in `GetUserQueryHandler` to retrieve all users.&#10;- Enhanced `GetUserViewModel` constructor for nullable numerical values.&#10;- Refactored imports and service assignments in `index.ts`." />
    <MESSAGE value="feat: add `GetAllUsers` method and update constructors for enhanced user handling&#10;&#10;- Introduced `GetAllUsers` method in `GetUserService` to fetch all users.&#10;- Added `GetAll` method in `GetUserQueryHandler` for querying all users.&#10;- Updated `GetUserViewModel` constructor to support nullable numerical values. &#10;- Refactored imports and service assignments in `index.ts`." />
    <MESSAGE value="feat: add `ChangeRequestFriendStatusCommandValidator` and update friendship handlers&#10;&#10;- Introduced `ChangeRequestFriendStatusCommandValidator` for validating friend status change commands.&#10;- Updated `AddRequestFriendCommandHandler` and `ChangeRequestFriendStatusCommandHandler` with corrected method calls and async handling.&#10;- Refactored constructor parameters to fix type mismatches." />
    <MESSAGE value="feat: enhance friendship handling and repository methods&#10;&#10;- Added `FastifyReply` for reply handling in `FriendshipService`.&#10;- Introduced new constructor dependencies and refactored `FriendshipService` handlers.&#10;- Updated friendship repository methods with improved typing and additional utility functions.&#10;- Changed `Friendship` entity to support mutable `status`." />
    <MESSAGE value="feat: improve friendship handling and add route definitions&#10;&#10;- Extended `FriendshipController` with `BaseController` inheritance and introduced `notificationError` for better error handling.&#10;- Fixed incorrect parameter mapping in `AddFriend` method.&#10;- Renamed and refactored `ListFriendshipStatus` to `FriendshipStatusList` for clarity.&#10;- Created `GetFriendshipListDTO` for handling friendship listing.&#10;- Added `FriendshipRoutes` for managing friendship-related endpoints, including `addFriend`, `changeRequestStatus`, and `friendsList`." />
    <MESSAGE value="feat: add `GetFriendshipListQuery` and its validator&#10;&#10;- Created `GetFriendshipListQuery` to structure friendship listing queries.&#10;- Added `GetFriendshipListQueryValidator` for validation of query input, including user existence verification and error handling." />
    <MESSAGE value="------------------------------------------------------------------------------------------feat: add `GetFriendshipListQuery` and its validator&#10;&#10;- Created `GetFriendshipListQuery` to structure friendship listing queries.&#10;- Added `GetFriendshipListQueryValidator` for validation of query input, including user existence verification and error handling." />
    <MESSAGE value="feat: implement `GetFriendshipListQueryHandler` and enhance repository&#10;&#10;- Added `GetFriendshipListQueryHandler` for handling friendship listing queries.&#10;- Updated `FriendshipRepository` with query DTO mapping and improved methods for retrieving friendships.&#10;- Introduced `GetFriendshipListQueryDTO` to structure friendship listing response data." />
    <MESSAGE value="feat: improve validation and null-safety in friend request commands&#10;&#10;- Fixed user existence verification in `AddRequestFriendCommandValidator`.&#10;- Added `status` property to `AddRequestFriendDTO` for better friend request status management.&#10;- Improved null-safety in `ChangeRequestFriendStatusCommandHandler` with type adjustments.&#10;- Refactored imports in `ChangeRequestFriendStatusCommand`." />
    <MESSAGE value="feat: refactor `FriendshipController` and update repository methods&#10;&#10;- Added `FriendshipService` dependency to `FriendshipController` for improved service handling.&#10;- Made controller methods public for better accessibility.&#10;- Updated `ChangeRequestFriendStatusDTO` with renamed `friendshipUuid` property.&#10;- Enhanced `FriendshipRepository` with improved typing, utility functions, and `fromDatabase` method for entity mapping.&#10;- Refactored `Friendship` entity to support mutable fields and introduced static `fromDatabase` method." />
    <MESSAGE value="feat: implement friendship listing in service and route updates&#10;&#10;- Renamed `uuid` to `userUuid` in `GetFriendshipListDTO` for clarity.&#10;- Added `ListFriendService` method in `FriendshipService` for listing friendships by status (pending/accepted).&#10;- Introduced `GetFriendshipListQuery` and its validator in `FriendshipService`.&#10;- Updated `FriendshipRoutes` with support for listing friendships." />
    <MESSAGE value="feat: refactor `GetFriendshipListQuery` handling and add view model&#10;&#10;- Changed properties in `GetFriendshipListQueryDTO` to `readonly` for immutability.&#10;- Made `Validator` async and ensured user existence verification uses `await`.&#10;- Introduced `GetFriendshipListViewModel` to map `DTO` data and streamline presentation logic.&#10;- Updated `GetFriendshipListQueryHandler` with `GetFriendshipListQueryDTO` dependency." />
    <MESSAGE value="feat: add friendship management support and schema improvements&#10;&#10;- Introduced `FriendshipRepository`, `FriendshipController`, and `FriendshipRoutes` for handling friendship-related functionality.&#10;- Updated `Prisma` schema with new indexes and corrected relation naming.&#10;- Marked `UserRepository` in `GetUserService` as `readonly` for immutability.&#10;- Removed unused methods from `IBaseRepository` to streamline interface.&#10;- Integrated friendship routes into application entry point." />
    <MESSAGE value="feat: enhance `StatusRequest` and refactor `UserRepository` with `User.fromDatabase` integration&#10;&#10;- Assigned string values to `StatusRequest` enum for consistency and readability.&#10;- Added `User.fromDatabase` static method for entity reconstruction from database.&#10;- Replaced manual entity mapping in `UserRepository` methods with `User.fromDatabase`." />
    <MESSAGE value="refactor: remove unused imports from `FriendshipService` and entry point&#10;&#10;- Eliminated redundant imports (`GetFriendshipListQueryDTO`, `GetUserViewModel`, `User`) for cleaner code and improved maintainability." />
    <MESSAGE value="fix: resolve merge conflict in `package-lock.json` and adjust indentations in `index.ts` &#10;&#10;- Addressed merge conflict in `package-lock.json` by retaining correct `cluster-key-slot` dependency entry.  &#10;- Updated inconsistent indentations in `user-service/src/index.ts` for better code readability." />
    <option name="LAST_COMMIT_MESSAGE" value="fix: resolve merge conflict in `package-lock.json` and adjust indentations in `index.ts` &#10;&#10;- Addressed merge conflict in `package-lock.json` by retaining correct `cluster-key-slot` dependency entry.  &#10;- Updated inconsistent indentations in `user-service/src/index.ts` for better code readability." />
  </component>
</project>