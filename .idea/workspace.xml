<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6d3134b4-a67d-4c46-80e3-654566a805b8" name="Changes" comment="feat: add query and handler for verifying user existence by usernames&#10;&#10;- Introduced `VerifyIfUsersExistsByUsernamesQuery` and related DTOs.&#10;- Added `VerifyIfUsersExistsByUsernamesQueryHandler` to handle the query logic.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/src/Infrastructure/Persistence/Repositories/Concrete/HistoryRepository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/src/Infrastructure/Persistence/Repositories/Concrete/HistoryRepository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/src/Presentation/Controllers/TournamentController.ts" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/src/Presentation/Controllers/TournamentController.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/src/Presentation/Routes/HistoryRoutes/HistoryRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/src/Presentation/Routes/HistoryRoutes/HistoryRoutes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game-service/src/Presentation/Routes/TournamentRoutes/TournamentRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/game-service/src/Presentation/Routes/TournamentRoutes/TournamentRoutes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/Presentation/Routes/UserRoutes/UserRoutes.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="package.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;bonissanti&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ArthurSobreira/42_transcendence.git&quot;,
    &quot;accountId&quot;: &quot;de286582-ad2a-4790-b6a2-7f4817dd9ce3&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2zmKcedwfHZtt7z3RJYxcKbTeVN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.tournament: Compose Deployment.executor": "Run",
    "HTTP Request.All in rest-api_10.executor": "Run",
    "HTTP Request.http-requests-log | #1.executor": "Run",
    "HTTP Request.http-requests-log | #6.executor": "Run",
    "HTTP Request.http-requests-log | #7.executor": "Run",
    "HTTP Request.http-requests-log | #8.executor": "Run",
    "HTTP Request.rest-api_10 | #1.executor": "Run",
    "HTTP Request.rest-api_11 | #1.executor": "Run",
    "HTTP Request.rest-api_9 | #1.executor": "Run",
    "JavaScript Debug.127.0.0.1:8080.executor": "Debug",
    "JavaScript Debug.127.0.0.1:8081.executor": "Debug",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "feature/novos-endpoints-externos",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "/home/bruno/Documents/42SP/42_transcendence/user-service/src/Domain/Queries/Handlers",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.build.executor": "Run",
    "npm.clean:dist.executor": "Run",
    "npm.start (1).executor": "Run",
    "npm.start.executor": "Debug",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "/home/bruno/Documents/42SP/42_transcendence/user-service/node_modules/typescript/lib"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/user-service/src/Domain/Queries/Handlers" />
      <recent name="$PROJECT_DIR$/user-service/src/Domain/Queries/QueryObject" />
      <recent name="$PROJECT_DIR$/user-service/src/Application/DTO/ToQuery" />
      <recent name="$PROJECT_DIR$/tournament/src/Application/Queries/Handlers" />
      <recent name="$PROJECT_DIR$/tournament/src/Application/DTO/ToQuery" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/user-service/src/Application" />
      <recent name="$PROJECT_DIR$/user-service/src/Domain" />
      <recent name="$PROJECT_DIR$/devops" />
      <recent name="$PROJECT_DIR$/tournament/src/Domain/Queries/QueryObject" />
      <recent name="$PROJECT_DIR$/tournament/src/Domain/Command/Handlers" />
    </key>
  </component>
  <component name="RunManager" selected="npm.start">
    <configuration name="http-requests-log | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" executionIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="http-requests-log | #6" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" executionIdentifier="#6" index="6" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="http-requests-log | #8" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" executionIdentifier="#8" index="8" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="rest-api_11 | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/rest-api_11.http" executionIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="127.0.0.1:8081" type="JavascriptDebugType" temporary="true" nameIsGenerated="true" uri="http://127.0.0.1:8081">
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/tournament/package.json" />
      <command value="start" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/tournament/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.http-requests-log | #1" />
      <item itemvalue="HTTP Request.http-requests-log | #6" />
      <item itemvalue="HTTP Request.http-requests-log | #8" />
      <item itemvalue="HTTP Request.rest-api_11 | #1" />
      <item itemvalue="JavaScript Debug.127.0.0.1:8081" />
      <item itemvalue="npm.start" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JavaScript Debug.127.0.0.1:8081" />
        <item itemvalue="HTTP Request.rest-api_11 | #1" />
        <item itemvalue="HTTP Request.http-requests-log | #8" />
        <item itemvalue="HTTP Request.http-requests-log | #6" />
        <item itemvalue="HTTP Request.http-requests-log | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-WS-251.26927.40" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6d3134b4-a67d-4c46-80e3-654566a805b8" name="Changes" comment="" />
      <created>1752330888248</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752330888248</updated>
      <workItem from="1752330889369" duration="4328000" />
      <workItem from="1752335230569" duration="2175000" />
      <workItem from="1752342442241" duration="1755000" />
      <workItem from="1752344203319" duration="11126000" />
      <workItem from="1752355352918" duration="731000" />
      <workItem from="1752356104739" duration="4274000" />
      <workItem from="1752529945400" duration="5257000" />
      <workItem from="1752535229586" duration="790000" />
      <workItem from="1752536105787" duration="659000" />
      <workItem from="1752536928505" duration="86000" />
      <workItem from="1752537118401" duration="535000" />
      <workItem from="1752539480256" duration="287000" />
      <workItem from="1752622489377" duration="1208000" />
      <workItem from="1752623711391" duration="2314000" />
      <workItem from="1752626039489" duration="3372000" />
      <workItem from="1752701419694" duration="8696000" />
      <workItem from="1752793555871" duration="8203000" />
      <workItem from="1752936359530" duration="928000" />
      <workItem from="1752937299761" duration="2991000" />
      <workItem from="1752944155456" duration="34000" />
      <workItem from="1752945751687" duration="1427000" />
      <workItem from="1752953037175" duration="4719000" />
      <workItem from="1752957795072" duration="1303000" />
      <workItem from="1753022738179" duration="11636000" />
      <workItem from="1753040238707" duration="1776000" />
    </task>
    <task id="LOCAL-00033" summary="feat: add new errors to `ErrorCatalog` and enhance `GetAllTournamentQueryHandler`&#10;&#10;- Added `InvalidNumberOfParticipantsHistory` and `HistoryNotFound` errors in `ErrorCatalog`.&#10;- Updated `InternalBackendApiError` message for `verifyUserExists` endpoint.&#10;- Introduced `GetAllHistoryDTO` for handling username-based query logic.&#10;- Adjusted import paths in `GetAllTournamentQueryHandler` for consistency.">
      <option name="closed" value="true" />
      <created>1752706895954</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1752706895954</updated>
    </task>
    <task id="LOCAL-00034" summary="refactor: relocate query objects to `Domain` layer and update imports&#10;&#10;- Moved `GetAllTournamentsQuery`, `GetTournamentQuery`, and other query objects to `Domain` layer.&#10;- Added `GetHistoryQuery` for handling username-based query logic.&#10;- Updated import paths across affected files for consistency.">
      <option name="closed" value="true" />
      <created>1752706904784</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1752706904784</updated>
    </task>
    <task id="LOCAL-00035" summary="refactor: relocate query handlers, validators to `Domain`, add `History` entity and update imports&#10;&#10;- Moved `GetTournamentQueryHandler`, `GetUserQueryValidator`, and related logic to `Domain` layer.  &#10;- Added `History` entity for managing tournament history details.  &#10;- Updated import paths across affected modules for consistency.">
      <option name="closed" value="true" />
      <created>1752706914906</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1752706914906</updated>
    </task>
    <task id="LOCAL-00036" summary="feat: implement `HistoryService` with `Create` method, add `History` and `MatchMaking` models to Prisma schema&#10;&#10;- Introduced `HistoryService` to manage tournament history creation and processing.&#10;- Added `History` and `MatchMaking` models to `tournament.prisma` schema for tracking matches and histories.&#10;- Updated `backend.prisma` schema formatting for consistency.">
      <option name="closed" value="true" />
      <created>1752706923764</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1752706923764</updated>
    </task>
    <task id="LOCAL-00037" summary="feat: add new errors to `ErrorCatalog` and update history validation logic&#10;&#10;- Added `PlayerCantPlayAgainstSelf` and `NegativePoints` errors to `ErrorCatalog` for enhanced validation.&#10;- Renamed `GetAllHistoryDTO` and `GetHistoryQuery` to `GetAllHistoriesDTO` and `GetAllHistoriesQuery`.&#10;- Updated `CreateHistoryValidator` to enforce validation for self-play and negative points.">
      <option name="closed" value="true" />
      <created>1752709258460</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1752709258460</updated>
    </task>
    <task id="LOCAL-00038" summary="feat: add `GetAllHistoriesQueryHandler`, `GetAllHistoriesViewModel`, and DTO for history retrieval&#10;&#10;- Implemented `GetAllHistoriesQueryHandler` to handle history retrieval by username.&#10;- Added `GetAllHistoriesViewModel` for mapping DTO data to a user-friendly format.&#10;- Introduced `GetAllHistoriesQueryDTO` to structure history query data.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752709268079</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1752709268079</updated>
    </task>
    <task id="LOCAL-00039" summary="feat: add `GetAllHistoriesQueryHandler`, `GetAllHistoriesViewModel`, and DTO for history retrieval&#10;&#10;- Implemented `GetAllHistoriesQueryHandler` to handle history retrieval by username.&#10;- Added `GetAllHistoriesViewModel` for mapping DTO data to a user-friendly format.&#10;- Introduced `GetAllHistoriesQueryDTO` to structure history query data.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752709276850</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1752709276850</updated>
    </task>
    <task id="LOCAL-00040" summary="feat: implement `GetAllHistories` in `HistoryService` and update `GetAllTournamentsDTO`&#10;&#10;- Added `GetAll` method in `HistoryService` to retrieve tournament histories based on username.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752709285371</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1752709285371</updated>
    </task>
    <task id="LOCAL-00041" summary="feat: implement `GetAllHistories` in `HistoryService` and update `GetAllTournamentsDTO`&#10;&#10;- Added `GetAll` method in `HistoryService` to retrieve tournament histories based on username.&#10;- Updated `GetAllTournamentsDTO` to replace `userUuid` with `username`.">
      <option name="closed" value="true" />
      <created>1752710073833</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1752710073833</updated>
    </task>
    <task id="LOCAL-00042" summary="feat: integrate `BackendApiClient` for user validation and win/lose tracking&#10;&#10;- Added `BackendApiClient` to `CreateHistoryCommandHandler` for tracking user win/lose metrics.&#10;- Renamed methods in `BackendApiClient` for consistency (`verifyUserExists` to `VerifyIfUsersExists`).&#10;- Introduced `AddWinLoseForUser` method in `BackendApiClient`.&#10;- Updated validators to use the newly renamed methods.">
      <option name="closed" value="true" />
      <created>1752801401502</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1752801401502</updated>
    </task>
    <task id="LOCAL-00043" summary="feat: add matchmaking-related DTOs, query objects, and new validation errors&#10;&#10;- Introduced `GenerateMatchmakingDTO`, `GenerateMatchmakingQuery`, and `GenerateMatchmakingQueryDTO` for matchmaking logic.&#10;- Added `NegativeWins` error to `ErrorCatalog` for validation of win values.&#10;- Updated `ErrorCatalog` messages for consistency in backend API error naming.">
      <option name="closed" value="true" />
      <created>1752801412750</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1752801412750</updated>
    </task>
    <task id="LOCAL-00044" summary="refactor: rename method in `IBackendApiClient` and update logs for clarity&#10;&#10;- Renamed `verifyUserExists` to `VerifyIfUsersExists` in `IBackendApiClient` for consistency.&#10;- Enhanced error logging in `index.ts` for better debugging. &#10;- Minor formatting updates in `HistoryRepository`.">
      <option name="closed" value="true" />
      <created>1752801427669</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1752801427669</updated>
    </task>
    <task id="LOCAL-00045" summary="feat: implement matchmaking controller, view model, and query handlers&#10;&#10;- Added `MatchmakingController` with matchmaking logic and integration via `GenerateMatchmakingDTO`.&#10;- Introduced `GenerateMatchmakingViewModel` to structure matchmaking data.&#10;- Implemented `GenerateMatchmakingQueryHandler` and `GenerateMatchmakingQueryValidator` for query processing and validation.">
      <option name="closed" value="true" />
      <created>1752801461053</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1752801461053</updated>
    </task>
    <task id="LOCAL-00046" summary="feat: add matchmaking service, user search method, and update routes&#10;&#10;- Implemented `MatchmakingService` with preliminary `Generate` logic.&#10;- Added `SearchForClosestOpponent` method in `UserRepository` for matchmaking user search based on win ratio and matches played.&#10;- Updated `UserRoutes` with corrected endpoint `/users/exists`.&#10;- Extended `NotificationError` with `SetAllErrorsToString` method for better error handling.">
      <option name="closed" value="true" />
      <created>1752801469755</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1752801469755</updated>
    </task>
    <task id="LOCAL-00047" summary="chore: add missing newline and leave TODO for additional validators&#10;&#10;- Fixed missing newline in `GenerateMatchmakingQueryValidator.ts`.&#10;- Added a TODO placeholder to include validators for additional getters.">
      <option name="closed" value="true" />
      <created>1752801608961</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1752801608961</updated>
    </task>
    <task id="LOCAL-00048" summary="chore: add TODO placeholders for unimplemented methods in `BackendApiClient`">
      <option name="closed" value="true" />
      <created>1752801659903</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1752801659903</updated>
    </task>
    <task id="LOCAL-00049" summary="feat: enhance matchmaking logic in `UserRepository` and add `GetUserMatchmakingQueryDTO`&#10;&#10;- Updated `SearchForClosestOpponent` to refine candidate selection based on win ratio differences.&#10;- Implemented a fallback `SearchForAnyOpponent` method for broader matchmaking.&#10;- Added `mapToUserMatchmakingQueryDTO` for structured matchmaking data mapping.&#10;- Introduced `GetUserMatchmakingQueryDTO` to support detailed matchmaking query responses.">
      <option name="closed" value="true" />
      <created>1752937454715</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1752937454715</updated>
    </task>
    <task id="LOCAL-00050" summary="feat: update matchmaking DTOs and queries to support total games and username&#10;&#10;- Replaced `uuid` with `username` in `GenerateMatchmakingDTO` and `GenerateMatchmakingQuery`.&#10;- Added `totalGames` property to DTOs and queries for enhanced matchmaking logic.&#10;- Updated `BackendApiClient` with new methods for user verification and opponent search.&#10;- Added `NegativeValues` error to `ErrorCatalog` for input validation.">
      <option name="closed" value="true" />
      <created>1752940167757</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1752940167758</updated>
    </task>
    <task id="LOCAL-00051" summary="refactor: replace `HistoryRepository` with `BackendApiClient` in `GenerateMatchmakingQueryHandler` and update validation&#10;&#10;- Updated `Handler` to use `BackendApiClient` for opponent search and user validation.&#10;- Extended input validation to include `totalGames` check.&#10;- Replaced `uuid` with `username` in user validation and opponent search methods.">
      <option name="closed" value="true" />
      <created>1752940175279</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1752940175279</updated>
    </task>
    <task id="LOCAL-00052" summary="refactor: replace `HistoryRepository` with `BackendApiClient` in `GenerateMatchmakingQueryHandler` and update validation&#10;&#10;- Updated `Handler` to use `BackendApiClient` for opponent search and user validation.&#10;- Extended input validation to include `totalGames` check.&#10;- Replaced `uuid` with `username` in user validation and opponent search methods.">
      <option name="closed" value="true" />
      <created>1752940184527</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1752940184527</updated>
    </task>
    <task id="LOCAL-00053" summary="refactor: simplify `SearchForClosestOpponent` and enhance `MatchmakingService`&#10;&#10;- Removed unnecessary `paremterLoses` parameter from `SearchForClosestOpponent`.&#10;- Refactored `MatchmakingService` to include enhanced query validation and error handling.&#10;- Updated `Generate` method to return detailed matchmaking results using `GetUserMatchmakingViewModel`.">
      <option name="closed" value="true" />
      <created>1752940200698</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1752940200698</updated>
    </task>
    <task id="LOCAL-00054" summary="refactor: remove unused `GenerateMatchmakingQueryDTO` and `GenerateMatchmakingViewModel` classes">
      <option name="closed" value="true" />
      <created>1752940252028</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1752940252028</updated>
    </task>
    <task id="LOCAL-00055" summary="refactor: switch matchmaking input from body to query parameters&#10;&#10;- Updated `GenerateMatchmaking` method in `MatchmakingController` to use query parameters instead of request body.&#10;- Adjusted `MatchmakingRoutes` to reflect the new query-based input.&#10;- Enhanced input validation with querystring schema in `MatchmakingRoutes`.">
      <option name="closed" value="true" />
      <created>1752947165529</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1752947165530</updated>
    </task>
    <task id="LOCAL-00056" summary="CHORE: arquivos trazidos do ultimo merge">
      <option name="closed" value="true" />
      <created>1752968641057</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1752968641057</updated>
    </task>
    <task id="LOCAL-00057" summary="CHORE: arquivos trazidos do ultimo merge">
      <option name="closed" value="true" />
      <created>1752968647770</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1752968647770</updated>
    </task>
    <task id="LOCAL-00058" summary="refactor: reorganize folder structure and update imports across `user-service`&#10;&#10;- Moved `Command`, `Validators`, and `DTO` files to appropriate `Domain`/`Application` subdirectories.&#10;- Adjusted imports to align with the new structure.&#10;- Removed debug `console.log` statements from `CreateUserCommandHandler`.">
      <option name="closed" value="true" />
      <created>1752968677001</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1752968677001</updated>
    </task>
    <task id="LOCAL-00059" summary="refactor: reorganize DTO, Command, and Validator folders in `user-service`&#10;&#10;- Moved `DTO` files to `Application/DTO/ToCommand`.&#10;- Relocated `Command` and `Validator` files under `Domain/Command`.&#10;- Updated corresponding import paths across affected services and handlers.">
      <option name="closed" value="true" />
      <created>1752968691533</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1752968691533</updated>
    </task>
    <task id="LOCAL-00060" summary="refactor: reorganize and update imports for `DeleteUserService` and `EditUserCommand` components&#10;&#10;- Moved `DTO`, `Command`, and `Validator` files to appropriate `Application` and `Domain` subdirectories.&#10;- Adjusted import paths in corresponding services and handlers.">
      <option name="closed" value="true" />
      <created>1752968704391</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1752968704391</updated>
    </task>
    <task id="LOCAL-00061" summary="refactor: restructure and update imports in `EditUserService` and related components&#10;&#10;- Moved `DTO`, `Command`, and `Validators` to appropriate `Application` and `Domain` subdirectories.&#10;- Adjusted import paths across affected files.&#10;- Added `NegativePoints` error to `ErrorCatalog`.">
      <option name="closed" value="true" />
      <created>1752968716512</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1752968716513</updated>
    </task>
    <task id="LOCAL-00062" summary="refactor: reorganize and update imports in `GetUserService` and related components&#10;&#10;- Moved `DTO`, `Validators`, and `Query` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths across affected services, handlers, and view models.">
      <option name="closed" value="true" />
      <created>1752968960416</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1752968960416</updated>
    </task>
    <task id="LOCAL-00063" summary="refactor: reorganize and update imports for `LoginSessionCommand` components&#10;&#10;- Relocated `ValueObjects` and `DTO` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths in relevant validators, handlers, and repository interfaces.&#10;- Replaced `VerificationService` with `UserService` in `index.ts`.">
      <option name="closed" value="true" />
      <created>1752968970768</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1752968970768</updated>
    </task>
    <task id="LOCAL-00064" summary="refactor: reorganize and update imports for `LogoutUserService` and `LoginUserService`&#10;&#10;- Moved `DTO`, `Command`, and `Validator` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths across affected services and handlers.">
      <option name="closed" value="true" />
      <created>1752968979126</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1752968979126</updated>
    </task>
    <task id="LOCAL-00065" summary="refactor: add `UpdateStatsService` functionality and reorganize related files&#10;&#10;- Introduced `UserService`'s `UpdateStatsService` and `VerifyIfUserExistsByUuidsService`.&#10;- Implemented `UpdateStatsCommand`, `DTO`, `Validator`, and `Handler` classes for user stats updates.&#10;- Organized `DTO`, `Command`, and `Validator` files into appropriate `Application` and `Domain` subdirectories. &#10;- Updated import paths within affected components.">
      <option name="closed" value="true" />
      <created>1752968990303</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1752968990303</updated>
    </task>
    <task id="LOCAL-00066" summary="refactor: replace `VerificationService` with `UserService` and reorganize imports&#10;&#10;- Removed `VerificationService` and replaced it with `UserService`.&#10;- Added new methods to `UserRepository` for handling username-based operations.&#10;- Implemented `UpdateStats` functionality in `UserController` and updated routes.&#10;- Organized `DTO` and `ViewModel` paths to follow `Application` hierarchy.&#10;- Updated import paths across affected files.">
      <option name="closed" value="true" />
      <created>1752968998968</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1752968998968</updated>
    </task>
    <task id="LOCAL-00067" summary="feat: add anonymous user support in `CreateUserCommand` flow&#10;&#10;- Introduced `annonymous` property in `CreateUserCommand` and `CreateUserDTO`.&#10;- Added `AddEmailWithHash` method in `EmailVO` to handle hashed email logic for anonymous users.&#10;- Updated `CreateUserCommandHandler` to use hashed emails when the user is anonymous.&#10;- Modified `UserController` and related components to handle the new property.">
      <option name="closed" value="true" />
      <created>1752969944519</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1752969944519</updated>
    </task>
    <task id="LOCAL-00068" summary="feat: add anonymous user support to `EditUserCommand` flow&#10;&#10;- Introduced `anonymous` property in `EditUserCommand` and `EditUserDTO`.&#10;- Updated `EditUserCommandHandler` to handle hashed emails for anonymous users.&#10;- Modified `UserController` and related components to support the new property.">
      <option name="closed" value="true" />
      <created>1752970349408</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1752970349408</updated>
    </task>
    <task id="LOCAL-00069" summary="feat: add support for multi-player updates in match history and stats flow&#10;&#10;- Extended `CreateHistoryCommand` to handle up to four players.&#10;- Updated `CreateHistoryCommandHandler` to manage multi-player entities and stats.&#10;- Replaced `AddWinLoseForUser` with `UpdateStatsForUsers` in `BackendApiClient`.&#10;- Introduced `UpdateStatsExternalDTO` for streamlined off-platform stats updates.">
      <option name="closed" value="true" />
      <created>1753026515192</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1753026515192</updated>
    </task>
    <task id="LOCAL-00070" summary="feat: extend history functionality to support up to four players&#10;&#10;- Updated `CreateHistoryValidator` to validate multi-player scenarios, including duplicate players and negative points.&#10;- Enhanced `CreateHistoryDTO` and `History` entity to accommodate player 3 and player 4 details.&#10;- Adjusted `HistoryController` to handle additional player data.">
      <option name="closed" value="true" />
      <created>1753026522967</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1753026522967</updated>
    </task>
    <task id="LOCAL-00071" summary="feat: extend multi-player support in history and stats flow&#10;&#10;- Updated `HistoryRepository` and related methods to handle player 3 and player 4 data.&#10;- Added `UpdateStatsExternalDTO` to support multi-player stats updates.&#10;- Modified `UpdateStatsDTO` and Prisma schema to incorporate additional player fields.">
      <option name="closed" value="true" />
      <created>1753026536154</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1753026536154</updated>
    </task>
    <task id="LOCAL-00072" summary="feat: add support for nullable UUIDs and refine multi-player stats updates&#10;&#10;- Updated `UserController` and routes to handle nullable UUIDs in the user existence check.&#10;- Added schema validation for `updateStats` endpoint to support nullable data for players 3 and 4.&#10;- Refined `UserRepository` to filter and validate UUIDs before querying the database.">
      <option name="closed" value="true" />
      <created>1753026544160</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1753026544161</updated>
    </task>
    <task id="LOCAL-00073" summary="feat: add nullable UUID support in user existence check&#10;&#10;- Updated `VerifyIfUsersExistsByUuidsQuery` and `DTO` to accept nullable UUIDs.&#10;- Enhanced type safety in user verification queries.">
      <option name="closed" value="true" />
      <created>1753026552897</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1753026552897</updated>
    </task>
    <task id="LOCAL-00074" summary="feat: add query and handler for verifying user existence by username&#10;&#10;- Introduced `VerifyIfUserExistsByUsernameQuery` to facilitate user existence checks.&#10;- Added `VerifyUserExistsByUsernameQueryHandler` for handling the query logic.">
      <option name="closed" value="true" />
      <created>1753031461755</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1753031461755</updated>
    </task>
    <task id="LOCAL-00075" summary="refactor: replace UUIDs with usernames in tournament creation flow&#10;&#10;- Updated `CreateTournamentCommand` to use usernames instead of UUIDs.&#10;- Renamed and modified `VerifyIfUsersExists` to `VerifyIfUsersExistsByUsername` in `BackendApiClient`.&#10;- Adjusted related handlers, validators, and DTO methods for username-based operations.">
      <option name="closed" value="true" />
      <created>1753035663840</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1753035663840</updated>
    </task>
    <task id="LOCAL-00076" summary="refactor: replace UUIDs with usernames in tournament creation flow&#10;&#10;- Updated `CreateTournamentCommand` to use usernames instead of UUIDs.&#10;- Renamed and modified `VerifyIfUsersExists` to `VerifyIfUsersExistsByUsername` in `BackendApiClient`.&#10;- Adjusted related handlers, validators, and DTO methods for username-based operations.">
      <option name="closed" value="true" />
      <created>1753035668644</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1753035668644</updated>
    </task>
    <task id="LOCAL-00077" summary="refactor: replace tournament UUIDs with usernames&#10;&#10;- Updated `EditTournamentDTO` and Prisma schema to use usernames instead of UUIDs.&#10;- Renamed `VerifyIfUsersExists` to `VerifyIfUsersExistsByUsername` in `BackendApiClient`.&#10;- Improved error handling in `GetUserQueryValidator` by throwing `ValidationException` on multiple errors.">
      <option name="closed" value="true" />
      <created>1753035748320</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1753035748320</updated>
    </task>
    <task id="LOCAL-00078" summary="refactor: update controllers and services to use usernames instead of UUIDs&#10;&#10;- Renamed and modified user existence verification methods to use usernames.&#10;- Added `VerifyIfUserExistsByUsername` and `VerifyIfUsersExistsByUsernames` methods in `UserController`.&#10;- Updated `UpdateStatsDTO` and related logic to handle additional players' usernames and points.&#10;- Replaced UUIDs with usernames across tournament-related controllers, entities, and repositories.">
      <option name="closed" value="true" />
      <created>1753035756914</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1753035756914</updated>
    </task>
    <task id="LOCAL-00079" summary="feat: add username-based user existence verification services and routes&#10;&#10;- Added `VerifyIfUserExistsByUsernameService` and `VerifyIfUsersExistsByUsernamesService` in `UserService`.&#10;- Introduced corresponding routes for `/users/exists/usernames` and `/users/exists/:username`.&#10;- Updated `UserRepository` to handle nullable or invalid usernames gracefully.">
      <option name="closed" value="true" />
      <created>1753035765399</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1753035765399</updated>
    </task>
    <task id="LOCAL-00080" summary="feat: add query and handler for verifying user existence by usernames&#10;&#10;- Introduced `VerifyIfUsersExistsByUsernamesQuery` and related DTOs.&#10;- Added `VerifyIfUsersExistsByUsernamesQueryHandler` to handle the query logic.">
      <option name="closed" value="true" />
      <created>1753035772102</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1753035772102</updated>
    </task>
    <task id="LOCAL-00081" summary="feat: add query and handler for verifying user existence by usernames&#10;&#10;- Introduced `VerifyIfUsersExistsByUsernamesQuery` and related DTOs.&#10;- Added `VerifyIfUsersExistsByUsernamesQueryHandler` to handle the query logic.">
      <option name="closed" value="true" />
      <created>1753035777236</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1753035777236</updated>
    </task>
    <option name="localTasksCounter" value="82" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="refactor: remove unused `GenerateMatchmakingQueryDTO` and `GenerateMatchmakingViewModel` classes" />
    <MESSAGE value="refactor: switch matchmaking input from body to query parameters&#10;&#10;- Updated `GenerateMatchmaking` method in `MatchmakingController` to use query parameters instead of request body.&#10;- Adjusted `MatchmakingRoutes` to reflect the new query-based input.&#10;- Enhanced input validation with querystring schema in `MatchmakingRoutes`." />
    <MESSAGE value="CHORE: arquivos trazidos do ultimo merge" />
    <MESSAGE value="refactor: reorganize folder structure and update imports across `user-service`&#10;&#10;- Moved `Command`, `Validators`, and `DTO` files to appropriate `Domain`/`Application` subdirectories.&#10;- Adjusted imports to align with the new structure.&#10;- Removed debug `console.log` statements from `CreateUserCommandHandler`." />
    <MESSAGE value="refactor: reorganize DTO, Command, and Validator folders in `user-service`&#10;&#10;- Moved `DTO` files to `Application/DTO/ToCommand`.&#10;- Relocated `Command` and `Validator` files under `Domain/Command`.&#10;- Updated corresponding import paths across affected services and handlers." />
    <MESSAGE value="refactor: reorganize and update imports for `DeleteUserService` and `EditUserCommand` components&#10;&#10;- Moved `DTO`, `Command`, and `Validator` files to appropriate `Application` and `Domain` subdirectories.&#10;- Adjusted import paths in corresponding services and handlers." />
    <MESSAGE value="refactor: restructure and update imports in `EditUserService` and related components&#10;&#10;- Moved `DTO`, `Command`, and `Validators` to appropriate `Application` and `Domain` subdirectories.&#10;- Adjusted import paths across affected files.&#10;- Added `NegativePoints` error to `ErrorCatalog`." />
    <MESSAGE value="refactor: reorganize and update imports in `GetUserService` and related components&#10;&#10;- Moved `DTO`, `Validators`, and `Query` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths across affected services, handlers, and view models." />
    <MESSAGE value="refactor: reorganize and update imports for `LoginSessionCommand` components&#10;&#10;- Relocated `ValueObjects` and `DTO` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths in relevant validators, handlers, and repository interfaces.&#10;- Replaced `VerificationService` with `UserService` in `index.ts`." />
    <MESSAGE value="refactor: reorganize and update imports for `LogoutUserService` and `LoginUserService`&#10;&#10;- Moved `DTO`, `Command`, and `Validator` files to appropriate `Application` and `Domain` subdirectories.&#10;- Updated import paths across affected services and handlers." />
    <MESSAGE value="refactor: add `UpdateStatsService` functionality and reorganize related files&#10;&#10;- Introduced `UserService`'s `UpdateStatsService` and `VerifyIfUserExistsByUuidsService`.&#10;- Implemented `UpdateStatsCommand`, `DTO`, `Validator`, and `Handler` classes for user stats updates.&#10;- Organized `DTO`, `Command`, and `Validator` files into appropriate `Application` and `Domain` subdirectories. &#10;- Updated import paths within affected components." />
    <MESSAGE value="refactor: replace `VerificationService` with `UserService` and reorganize imports&#10;&#10;- Removed `VerificationService` and replaced it with `UserService`.&#10;- Added new methods to `UserRepository` for handling username-based operations.&#10;- Implemented `UpdateStats` functionality in `UserController` and updated routes.&#10;- Organized `DTO` and `ViewModel` paths to follow `Application` hierarchy.&#10;- Updated import paths across affected files." />
    <MESSAGE value="feat: add anonymous user support in `CreateUserCommand` flow&#10;&#10;- Introduced `annonymous` property in `CreateUserCommand` and `CreateUserDTO`.&#10;- Added `AddEmailWithHash` method in `EmailVO` to handle hashed email logic for anonymous users.&#10;- Updated `CreateUserCommandHandler` to use hashed emails when the user is anonymous.&#10;- Modified `UserController` and related components to handle the new property." />
    <MESSAGE value="feat: add anonymous user support to `EditUserCommand` flow&#10;&#10;- Introduced `anonymous` property in `EditUserCommand` and `EditUserDTO`.&#10;- Updated `EditUserCommandHandler` to handle hashed emails for anonymous users.&#10;- Modified `UserController` and related components to support the new property." />
    <MESSAGE value="feat: add support for multi-player updates in match history and stats flow&#10;&#10;- Extended `CreateHistoryCommand` to handle up to four players.&#10;- Updated `CreateHistoryCommandHandler` to manage multi-player entities and stats.&#10;- Replaced `AddWinLoseForUser` with `UpdateStatsForUsers` in `BackendApiClient`.&#10;- Introduced `UpdateStatsExternalDTO` for streamlined off-platform stats updates." />
    <MESSAGE value="feat: extend history functionality to support up to four players&#10;&#10;- Updated `CreateHistoryValidator` to validate multi-player scenarios, including duplicate players and negative points.&#10;- Enhanced `CreateHistoryDTO` and `History` entity to accommodate player 3 and player 4 details.&#10;- Adjusted `HistoryController` to handle additional player data." />
    <MESSAGE value="feat: extend multi-player support in history and stats flow&#10;&#10;- Updated `HistoryRepository` and related methods to handle player 3 and player 4 data.&#10;- Added `UpdateStatsExternalDTO` to support multi-player stats updates.&#10;- Modified `UpdateStatsDTO` and Prisma schema to incorporate additional player fields." />
    <MESSAGE value="feat: add support for nullable UUIDs and refine multi-player stats updates&#10;&#10;- Updated `UserController` and routes to handle nullable UUIDs in the user existence check.&#10;- Added schema validation for `updateStats` endpoint to support nullable data for players 3 and 4.&#10;- Refined `UserRepository` to filter and validate UUIDs before querying the database." />
    <MESSAGE value="feat: add nullable UUID support in user existence check&#10;&#10;- Updated `VerifyIfUsersExistsByUuidsQuery` and `DTO` to accept nullable UUIDs.&#10;- Enhanced type safety in user verification queries." />
    <MESSAGE value="feat: add query and handler for verifying user existence by username&#10;&#10;- Introduced `VerifyIfUserExistsByUsernameQuery` to facilitate user existence checks.&#10;- Added `VerifyUserExistsByUsernameQueryHandler` for handling the query logic." />
    <MESSAGE value="refactor: replace UUIDs with usernames in tournament creation flow&#10;&#10;- Updated `CreateTournamentCommand` to use usernames instead of UUIDs.&#10;- Renamed and modified `VerifyIfUsersExists` to `VerifyIfUsersExistsByUsername` in `BackendApiClient`.&#10;- Adjusted related handlers, validators, and DTO methods for username-based operations." />
    <MESSAGE value="refactor: replace tournament UUIDs with usernames&#10;&#10;- Updated `EditTournamentDTO` and Prisma schema to use usernames instead of UUIDs.&#10;- Renamed `VerifyIfUsersExists` to `VerifyIfUsersExistsByUsername` in `BackendApiClient`.&#10;- Improved error handling in `GetUserQueryValidator` by throwing `ValidationException` on multiple errors." />
    <MESSAGE value="refactor: update controllers and services to use usernames instead of UUIDs&#10;&#10;- Renamed and modified user existence verification methods to use usernames.&#10;- Added `VerifyIfUserExistsByUsername` and `VerifyIfUsersExistsByUsernames` methods in `UserController`.&#10;- Updated `UpdateStatsDTO` and related logic to handle additional players' usernames and points.&#10;- Replaced UUIDs with usernames across tournament-related controllers, entities, and repositories." />
    <MESSAGE value="feat: add username-based user existence verification services and routes&#10;&#10;- Added `VerifyIfUserExistsByUsernameService` and `VerifyIfUsersExistsByUsernamesService` in `UserService`.&#10;- Introduced corresponding routes for `/users/exists/usernames` and `/users/exists/:username`.&#10;- Updated `UserRepository` to handle nullable or invalid usernames gracefully." />
    <MESSAGE value="feat: add query and handler for verifying user existence by usernames&#10;&#10;- Introduced `VerifyIfUsersExistsByUsernamesQuery` and related DTOs.&#10;- Added `VerifyIfUsersExistsByUsernamesQueryHandler` to handle the query logic." />
    <option name="LAST_COMMIT_MESSAGE" value="feat: add query and handler for verifying user existence by usernames&#10;&#10;- Introduced `VerifyIfUsersExistsByUsernamesQuery` and related DTOs.&#10;- Added `VerifyIfUsersExistsByUsernamesQueryHandler` to handle the query logic." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/game-service/src/Presentation/Routes/TournamentRoutes/TournamentRoutes.ts</url>
          <line>28</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/backend/src/Presentation/Controllers/UserController.ts</url>
          <line>68</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/game-service/src/Presentation/Controllers/HistoryController.ts</url>
          <line>39</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/game-service/dist/Application/Services/Concrete/MatchmakingService.js</url>
          <line>23</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/game-service/src/Application/Services/Concrete/MatchmakingService.ts</url>
          <line>31</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>