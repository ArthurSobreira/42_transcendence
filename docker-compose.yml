services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app                          # Mapeia o código do backend
    ports:
      - "8000:8000"                             # Porta para acessar o backend
    depends_on:
      - db
      - blockchain
      - vault
    environment:
      DATABASE_URL: postgresql://backend_user:backend_password@db:5432/backend_db
      BLOCKCHAIN_URL: http://blockchain:8545
      VAULT_ADDR: http://vault:8200
    env_file:
      - .env                                    # Variáveis sensíveis do backend
    networks:
      - transcendence

  nginx:
    build:
      context: ./nginx
    volumes:
      - ./nginx/frontend:/usr/share/nginx/html  # Mapeia arquivos do frontend
    ports:
      - "3000:80"                               # Porta para acessar o frontend
    # depends_on:
    #   - backend
    networks:
      - transcendence

  blockchain:
    build:
      context: ./blockchain
    volumes:
      - ./blockchain/contracts:/contracts       # Mapeia contratos inteligentes
      - ./blockchain/scripts:/scripts           # Mapeia scripts de deploy
    ports:
      - "8545:8545"                             # Porta para conectar ao Ganache
    networks:
      - transcendence

  db:
    build:
      context: ./db                             # Diretório contendo o Dockerfile e scripts SQL
    volumes:
      - ./volumes/db_data:/var/lib/postgresql/data        # Volume persistente do banco
    environment:
      POSTGRES_USER: ${POSTGRES_USER}    # Variável de ambiente injetada pelo Vault Agent
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"                             # Porta para o banco de dados
    networks:
      - transcendence
    depends_on:
      - pgadmin
      - vault-agent

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8081:80"  # Porta para acessar o pgAdmin no navegador
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com  # Email para login
      PGADMIN_DEFAULT_PASSWORD: admin          # Senha para login
    networks:
      - transcendence

  vault:
    image: vault:1.8.0                             # Usando a imagem oficial do Vault
    container_name: vault
    volumes:
      - ./vault/config/config.hcl:/vault/config/config.hcl:ro # Arquivo de configuração do Vault
      - ./vault/policies:/vault/policies:ro            # Volume de policies
      - ./volumes/vault_data:/vault/data                # Volume persistente do Vault
    ports:
      - "8200:8200"                                  # Porta para acessar o Vault
    cap_add:
      - IPC_LOCK                                     # Requisito do Vault
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
    command: vault server -config=/vault/config/config.hcl
    networks:
      - transcendence
    restart: always

  vault-agent:
    image: vault:1.8.0
    container_name: vault-agent
    command: "vault agent -config=/vault/config/agent.hcl"
    volumes:
      - ./vault/config/agent.hcl:/vault/config/agent.hcl  # Configuração do Vault Agent
      - ./vault/secrets:/vault/secrets                    # Onde os segredos serão injetados
      - ./vault/agent:/vault/agent                        # Contém role_id e secret_id
      - ./vault/templates:/vault/templates                # Templates do Consul Template
    environment:
      VAULT_ADDR: http://vault:8200
    networks:
      - transcendence
    depends_on:
      - vault
    restart: always
    cap_add:
      - IPC_LOCK



 

  elasticsearch:
    build:
      context: ./elk/elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data      # Volume para dados
    ports:
      - "9200:9200"                                           # Porta para acessar o Elasticsearch
    networks:
      - transcendence

  kibana:
    build:
      context: ./elk/kibana
    ports:
      - "5601:5601"                                           # Porta para acessar o Kibana
    depends_on:
      - elasticsearch
    networks:
      - transcendence

  logstash:
    build:
      context: ./elk/logstash
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
      - logs:/var/log/logstash                                # Volume para logs
    ports:
      - "5044:5044"                                           # Porta para receber logs via Beats
    depends_on:
      - elasticsearch
    networks:
      - transcendence

  prometheus:
    build:
      context: ./prometheus
    volumes:
      - prometheus_data:/prometheus                           # Volume persistente para métricas
    ports:
      - "9090:9090"                                           # Porta para acessar o Prometheus
    networks:
      - transcendence

volumes:
  db_data:                                                    # Volume persistente para PostgreSQL
    driver: local
  vault_data:                                                 # Volume persistente para o Vault
    driver: local
  elasticsearch_data:                                         # Volume persistente para Elasticsearch
    driver: local
  logs:                                                       # Volume persistente para logs
    driver: local
  prometheus_data:                                            # Volume persistente para Prometheus
    driver: local

networks:
  transcendence:
    driver: bridge
