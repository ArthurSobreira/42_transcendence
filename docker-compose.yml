services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      VITE_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./devops/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      user-service:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      game-service:
        condition: service_healthy
    networks:
      - app-network

  user-service:
    build: user-service
    environment:
      DATABASE_USER_URL: ${DATABASE_USER_URL}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - user-service-prisma-data:/usr/src/app/prisma
    ports:
      - "9229:9229"
      - "5555:5555"
    depends_on:
      auth-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  auth-service:
    build: ./auth-service
    environment:
      DATABASE_AUTH_URL: ${DATABASE_AUTH_URL}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GAME_SERVICE_URL: ${GAME_SERVICE_URL}
      DATABASE_AUTH_POSTGRES_URL: ${DATABASE_AUTH_POSTGRES_URL}
    ports:
      - "3000:3000"
    volumes:
      - auth-prisma-data:/usr/src/app/prisma
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  game-service:
    build: game-service
    environment:
      DATABASE_GAME_URL: ${DATABASE_GAME_URL}
      JWT_SECRET: ${JWT_SECRET}
      BACKEND_API_URL: ${BACKEND_API_URL}
      NODE_TLS_REJECT_UNAUTHORIZED: ${NODE_TLS_REJECT_UNAUTHORIZED}
    ports:
      - "3001:3001"
      - "5556:5556"
    volumes:
      - game-service-prisma-data:/usr/src/app/prisma
      - ./devops/nginx/ssl:/usr/src/app/ssl:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5556"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ngrok-service:
    build: ngrok-service
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
      NGROK_PORT: ${NGROK_PORT}
    ports:
      - "4040:4040"
    networks:
      - app-network
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:4040"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s
    depends_on:
      user-service:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  user-service-prisma-data:
  auth-prisma-data:
  game-service-prisma-data: